import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { useState } from 'react';

import { HashConnect } from "hashconnect";
import { TransferTransaction, AccountId } from "@hashgraph/sdk";

export default function Home() {
  const [accountId, setAccountId] = useState("Connect");
  const [topic, setTopic] = useState("");

  let saveData = {
    pairingString: "",
    privateKey: "",
    pairedWalletData: null,
    pairedAccounts: []
  };
  
  let appData = {
    name: "Hashconnect demo",
    description: "a demo for hashconnect",
    icon: "https://pbs.twimg.com/profile_images/1466508157702873090/4CsWIPR1_400x400.jpg",
  };

  let hashconnect = new HashConnect();

  async function connectWallet() {
    let initData = await hashconnect.init(appData);
    let privateKey = initData.privKey;
    console.log("privateKey: ", privateKey);
  
    let state = await hashconnect.connect();
    setTopic(state.topic);
    console.log("topic:", state.topic);
  
    saveData.pairingString = hashconnect.generatePairingString(state, "testnet", false);
  
    hashconnect.findLocalWallets();
    hashconnect.connectToLocalWallet(saveData.pairingString);
  
    hashconnect.pairingEvent.once(pairingData => {
      pairingData.accountIds.forEach(id => {
        setAccountId(id);
        console.log(id);
      })
    })
  }

  async function sendHbar() {
    let to = "0.0.34008195";

    console.log("\n ==== send hbar ====\n");
    console.log("topid:", topic);
    console.log("accountId:", accountId);

    const provider = hashconnect.getProvider("testnet", topic, accountId);
    const signer = hashconnect.getSigner(provider);

    console.log("signer:", signer);

    let transaction = await new TransferTransaction()
      .addHbarTransfer(AccountId.fromString(accountId), -1)
      .addHbarTransfer(AccountId.fromString(to), 1)
      .freezeWithSigner(signer);

    // TODO
    let res = await transaction.executeWithSigner(signer);
    console.log(res);
    alert("TODO: send hbar not working yet");
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Hashconnect Demo</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1>Hashconnect Demo</h1>
      <button onClick={() => connectWallet()}> {accountId} </button>

      <button onClick={() => sendHbar()}>Send Hbar</button>
    </div>
  )
}
